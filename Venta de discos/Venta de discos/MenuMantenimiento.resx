<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>